# Generated by Django 3.2.18 on 2025-02-07 14:59

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import ohmg.core.storages


class Migration(migrations.Migration):

    replaces = [('core', '0001_initial'), ('core', '0002_auto_20240901_1331'), ('core', '0003_auto_20241119_2008'), ('core', '0004_auto_20250114_2223'), ('core', '0005_remove_layer_extent'), ('core', '0006_layer_extent'), ('core', '0007_auto_20250120_2212'), ('core', '0008_auto_20250123_2036'), ('core', '0009_auto_20250123_2104'), ('core', '0010_auto_20250124_0009'), ('core', '0011_remove_layer_layerset'), ('core', '0012_remove_region_gcp_group')]

    initial = True

    dependencies = [
        ('places', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100)),
                ('page_number', models.CharField(blank=True, max_length=10, null=True)),
                ('file', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='documents')),
                ('thumbnail', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='thumbnails')),
                ('source_url', models.CharField(blank=True, help_text='Storing a source_url allows the file to be downloaded at any point after the instance has been created.', max_length=255, null=True)),
                ('iiif_info', models.JSONField(blank=True, null=True)),
                ('load_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MapGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=100)),
                ('year_start', models.IntegerField(blank=True, null=True)),
                ('year_end', models.IntegerField(blank=True, null=True)),
                ('creator', models.CharField(max_length=200)),
                ('publisher', models.CharField(max_length=200)),
                ('map_prefix', models.CharField(blank=True, choices=[('volume', 'volume'), ('part', 'part')], help_text='The preferred term for referring to maps within this map group.', max_length=10, null=True)),
            ],
            options={
                'verbose_name_plural': '      Map Groups',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('division_number', models.IntegerField(blank=True, null=True)),
                ('is_map', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='regions')),
                ('thumbnail', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='thumbnails')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='region_created_by', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='core.document')),
                ('georeferenced', models.BooleanField(default=False)),
                ('title', models.CharField(default='untitled region', max_length=200)),
                ('image_size', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=2)),
                ('nickname', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': '  Regions',
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('identifier', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, choices=[(1, 'JAN.'), (2, 'FEB.'), (3, 'MAR.'), (4, 'APR.'), (5, 'MAY.'), (6, 'JUN.'), (7, 'JUL.'), (8, 'AUG.'), (9, 'SEP.'), (10, 'OCT.'), (11, 'NOV.'), (12, 'DEC.')], null=True)),
                ('creator', models.CharField(blank=True, max_length=200, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('volume_number', models.CharField(blank=True, help_text='Volume number (or name?), if this map is included in a MapGroup.', max_length=25, null=True)),
                ('document_page_type', models.CharField(blank=True, choices=[('page', 'page'), ('sheet', 'sheet'), ('plate', 'plate'), ('part', 'part')], help_text='The preferred term for referring to documents within this map.', max_length=10, null=True)),
                ('iiif_manifest', models.JSONField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('load_date', models.DateTimeField(blank=True, null=True)),
                ('document_sources', models.JSONField(blank=True, default=dict, null=True)),
                ('access', models.CharField(choices=[('none', 'none'), ('sponsor', 'sponsor'), ('any', 'any')], default='any', max_length=50)),
                ('loaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maps_loaded', to=settings.AUTH_USER_MODEL)),
                ('locales', models.ManyToManyField(blank=True, to='places.Place')),
                ('mapgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps', to='core.mapgroup')),
                ('sponsor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maps_sponsored', to=settings.AUTH_USER_MODEL)),
                ('item_lookup', models.JSONField(blank=True, default=dict, null=True)),
                ('status', models.CharField(choices=[('not started', 'not started'), ('initializing...', 'initializing...'), ('document load error', 'document load error'), ('ready', 'ready')], default='not started', max_length=50)),
                ('featured', models.BooleanField(default=False, help_text='show in featured section')),
                ('hidden', models.BooleanField(default=False, help_text='this map will be excluded from api calls (but url available directly)')),
            ],
            options={
                'verbose_name_plural': '    Maps',
            },
        ),
        migrations.AddField(
            model_name='document',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='core.map'),
        ),
        migrations.AddField(
            model_name='document',
            name='prepared',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='document',
            name='title',
            field=models.CharField(default='untitled document', max_length=200),
        ),
        migrations.AddField(
            model_name='document',
            name='image_size',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=2),
        ),
        migrations.AddField(
            model_name='document',
            name='nickname',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.CreateModel(
            name='LayerSetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('display_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Layer Set Categories',
            },
        ),
        migrations.CreateModel(
            name='LayerSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multimask', models.JSONField(blank=True, null=True)),
                ('mosaic_geotiff', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='mosaics')),
                ('mosaic_json', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='mosaics')),
                ('extent', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=4)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.layersetcategory')),
                ('map', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.map')),
            ],
            options={
                'verbose_name_plural': 'Layer Sets',
            },
        ),
        migrations.AlterModelOptions(
            name='document',
            options={'verbose_name_plural': '   Documents'},
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='layers')),
                ('thumbnail', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='thumbnails')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='layers_created', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='layers_updated', to=settings.AUTH_USER_MODEL)),
                ('region', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.region')),
                ('title', models.CharField(default='untitled layer', max_length=200)),
                ('nickname', models.CharField(blank=True, max_length=200, null=True)),
                ('extent', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=4)),
                ('layerset2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.layerset')),
            ],
            options={
                'verbose_name_plural': ' Layers',
            },
        ),
    ]
