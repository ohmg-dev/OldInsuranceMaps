# Generated by Django 3.2.18 on 2024-06-23 22:38

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import ohmg.core.storages


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('places', '0001_initial'),
        ('georeference', '0007_rename_setcategory_layersetcategory'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.CharField(blank=True, max_length=10, null=True)),
                ('file', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='documents')),
                ('thumbnail', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='thumbnails')),
                ('source_url', models.CharField(blank=True, help_text='Storing a source_url allows the file to be downloaded at any point after the instance has been created.', max_length=255, null=True)),
                ('iiif_info', models.JSONField(blank=True, null=True)),
                ('load_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MapGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('year_start', models.IntegerField(blank=True, null=True)),
                ('year_end', models.IntegerField(blank=True, null=True)),
                ('creator', models.CharField(max_length=200)),
                ('publisher', models.CharField(max_length=200)),
                ('map_prefix', models.CharField(blank=True, choices=[('volume', 'volume'), ('part', 'part')], help_text='The preferred term for referring to maps within this map group.', max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('division_number', models.IntegerField(blank=True, null=True)),
                ('is_map', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='set_upload_location')),
                ('thumbnail', models.FileField(blank=True, max_length=255, null=True, storage=ohmg.core.storages.OverwriteStorage(), upload_to='thumbnails')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.document')),
                ('gcp_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='georeference.gcpgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('identifier', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('creator', models.CharField(max_length=200)),
                ('publisher', models.CharField(max_length=200)),
                ('volume_number', models.CharField(blank=True, help_text='Volume number (or name?), if this map is included in a MapGroup.', max_length=25, null=True)),
                ('document_page_type', models.CharField(blank=True, choices=[('page', 'page'), ('sheet', 'sheet'), ('plate', 'plate'), ('part', 'part')], help_text='The preferred term for referring to documents within this map.', max_length=10, null=True)),
                ('iiif_manifest', models.JSONField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('load_date', models.DateTimeField(blank=True, null=True)),
                ('document_lookup', models.JSONField(blank=True, default=dict, null=True)),
                ('layer_lookup', models.JSONField(blank=True, default=dict, null=True)),
                ('access', models.CharField(choices=[('none', 'none'), ('sponsor', 'sponsor'), ('any', 'any')], default='any', max_length=50)),
                ('loaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loaded_by_user', to=settings.AUTH_USER_MODEL)),
                ('locales', models.ManyToManyField(blank=True, to='places.Place')),
                ('mapgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.mapgroup')),
                ('sponsor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sponsor_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.map'),
        ),
    ]
