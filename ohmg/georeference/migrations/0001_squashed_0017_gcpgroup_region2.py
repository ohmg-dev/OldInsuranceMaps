# Generated by Django 3.2.18 on 2025-02-07 14:55

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ohmg.georeference.models
import ohmg.georeference.storage
import uuid


class Migration(migrations.Migration):

    replaces = [('georeference', '0001_initial'), ('georeference', '0002_alter_itembase_status'), ('georeference', '0003_auto_20240302_1638'), ('georeference', '0004_alter_setcategory_options'), ('georeference', '0005_auto_20240617_1102'), ('georeference', '0006_rename_annotationset_layerset'), ('georeference', '0007_rename_setcategory_layersetcategory'), ('georeference', '0008_auto_20240823_1921'), ('georeference', '0009_auto_20240914_1525'), ('georeference', '0010_remove_layerset_volume'), ('georeference', '0011_remove_gcpgroup_doc'), ('georeference', '0012_auto_20250119_1221'), ('georeference', '0013_delete_documentlink'), ('georeference', '0014_auto_20250119_1440'), ('georeference', '0015_alter_layerset_map'), ('georeference', '0016_auto_20250124_0035'), ('georeference', '0017_gcpgroup_region2')]

    initial = True

    dependencies = [
        # ('loc_insurancemaps', '0004_auto_20240116_1016'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0007_auto_20250120_2212'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0011_remove_layer_layerset'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GCPGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crs_epsg', models.IntegerField(blank=True, null=True)),
                ('transformation', models.CharField(blank=True, choices=[('tps', 'tps'), ('poly1', 'poly1'), ('poly2', 'poly2'), ('poly3', 'poly3')], max_length=20, null=True)),
                ('region2', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.region')),
            ],
            options={
                'verbose_name': 'GCP Group',
                'verbose_name_plural': 'GCP Groups',
            },
        ),
        migrations.CreateModel(
            name='SessionBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('p', 'Preparation'), ('g', 'Georeference')], max_length=1)),
                ('stage', models.CharField(choices=[('input', 'input'), ('processing', 'processing'), ('finished', 'finished')], default='input', max_length=11)),
                ('status', models.CharField(default='getting user input', max_length=50)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('user_input_duration', models.IntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_run', models.DateTimeField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('doc2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.document')),
                ('lyr2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.layer')),
                ('reg2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.region')),
            ],
        ),
        migrations.CreateModel(
            name='GCP',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pixel_x', models.IntegerField(blank=True, null=True)),
                ('pixel_y', models.IntegerField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('gcp_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='georeference.gcpgroup')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'GCP',
                'verbose_name_plural': 'GCPs',
            },
        ),
        migrations.CreateModel(
            name='GeorefSession',
            fields=[
            ],
            options={
                'verbose_name': 'Georeference Session',
                'verbose_name_plural': '  Georeference Sessions',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('georeference.sessionbase',),
        ),
        migrations.CreateModel(
            name='PrepSession',
            fields=[
            ],
            options={
                'verbose_name': 'Preparation Session',
                'verbose_name_plural': '   Preparation Sessions',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('georeference.sessionbase',),
        ),
        migrations.CreateModel(
            name='SessionLock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_id', models.PositiveIntegerField()),
                ('expiration', models.DateTimeField(default=ohmg.georeference.models.default_expiration_time)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locks', to='georeference.sessionbase')),
                ('target_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session Lock',
                'verbose_name_plural': 'Session Locks',
            },
        ),
    ]
